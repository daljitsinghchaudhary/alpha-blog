import * as Token from './token';
/**
 * parses a netrc file
 */
export declare class Netrc extends Token.Base {
    /**
     * generates or parses a netrc file
     * @example
     * const {Netrc} = require('netrc-parser')
     * const netrc = new Netrc()
     * netrc.machines['api.heroku.com'].password // get auth token from ~/.netrc
     */
    constructor(file?: string);
    private _file;
    protected _tokens: Token.Token[];
    readonly file: string;
    readonly machines: Token.Machines;
    private _machines;
    default: Token.IMachine | undefined;
    load(): Promise<void>;
    loadSync(): void;
    /**
     * save the current home netrc with any changes
     * @example
     * const Netrc = require('netrc-parser')
     * const netrc = new Netrc()
     * await netrc.load()
     * netrc.machines['api.heroku.com'].password = 'newpassword'
     * netrc.save()
     */
    save(): Promise<{}>;
    /**
     * save the current home netrc with any changes
     * @example
     * const Netrc = require('netrc-parser')
     * const netrc = new Netrc()
     * netrc.loadSync()
     * netrc.machines['api.heroku.com'].password = 'newpassword'
     * netrc.saveSync()
     */
    saveSync(): void;
    private readonly gpgEncryptArgs;
    private write(body);
    private writeSync(body);
    private parse(body);
    private readonly gpgDecryptArgs;
    private readFile();
    private readFileSync();
    private readonly homedir;
    private defaultFile();
}
declare const _default: Netrc;
export default _default;
